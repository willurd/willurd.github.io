{"version":3,"sources":["../node_modules/moment-mini/locale sync /^/.*$","components/Editor.js","utils/showdown.js","extensions/katex.js","extensions/mermaid.js","components/Renderer.js","App.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","mode","Editor","text","onTextChange","splitMode","ref","useRef","useEffect","snippetManager","brace","acequire","snippetMap","length","unregister","snippet","parseSnippetFile","register","handleChange","useCallback","value","className","theme","height","width","fontSize","focus","showGutter","showPrintMargin","wrapEnabled","highlightActiveLine","enableBasicAutocompletion","enableSnippets","tabSize","onChange","commands","name","bindKey","win","mac","exec","editor","current","navigateLineEnd","insert","navigateLineStart","navigateUp","editorProps","$blockScrolling","Infinity","createShowdownLanguageExtension","language","renderer","showdown","extension","type","filter","converter","options","helper","replaceRecursiveRegExp","wholeMatch","match","left","right","decodeHtml","lang","includes","attrIndex","indexOf","slice","katex","renderToString","split","l","join","throwOnError","mermaid","initialize","logLevel","securityLevel","startOnLoad","arrowMarkerAbsolute","flowchart","htmlLabels","curve","sequence","diagramMarginX","diagramMarginY","actorMargin","boxMargin","boxTextMargin","noteMargin","messageMargin","mirrorActors","bottomMarginAdj","useMaxWidth","rightAngles","showSequenceNumbers","gantt","titleTopMargin","barHeight","barGap","topPadding","leftPadding","gridLineStartPadding","fontFamily","numberSectionStyles","axisFormat","currentIndex","el","render","getNextId","Converter","omitExtraWLInCodeBlocks","ghCompatibleHeaderId","prefixHeaderId","parseImgDimensions","simplifiedAutoLink","excludeTrailingPunctuationFromURLs","literalMidWordUnderscores","strikethrough","tables","ghCodeBlocks","tasklists","disableForced4SpacesIndentedSublists","extensions","showdownHighlight","Renderer","useState","html","setHtml","makeHtml","dangerouslySetInnerHTML","__html","SplitMode","App","setText","editorKey","setEditorKey","parseUrl","window","location","href","query","handleSplitPaneResize","throttle","Date","now","Math","random","addEventListener","removeEventListener","localStorage","getItem","setItem","defaultSize","minSize","pane2Style","overflow","key","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.5347777d.chunk.js","sourcesContent":["var map = {\n\t\"./locale\": 29,\n\t\"./locale.js\": 29\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 282;","import React, { useRef, useEffect, useCallback } from \"react\";\nimport AceEditor from \"react-ace\";\nimport brace from \"brace\";\nimport \"brace/mode/markdown\";\nimport \"brace/theme/clouds_midnight\";\nimport \"brace/ext/language_tools\";\nimport \"brace/snippets/markdown\";\n\nconst mode = \"markdown\";\n\nconst Editor = ({ text, onTextChange, splitMode }) => {\n  const ref = useRef();\n\n  useEffect(() => {\n    // TODO: Move this code somewhere else.\n    // Configure ace.\n    const { snippetManager } = brace.acequire(\"ace/snippets\");\n\n    // Unregister all of the default snippets. All we want are our\n    // custom snippets.\n    // snippetManager.unregister(snippetManager.snippetMap[mode]) doesn't\n    // actually work. It unregisters some of the snippets, but not all of them.\n    while (snippetManager.snippetMap[mode].length) {\n      snippetManager.unregister(\n        snippetManager.snippetMap[mode][\n          snippetManager.snippetMap[mode].length - 1\n        ]\n      );\n    }\n\n    // https://github.com/thlorenz/brace/issues/125\n    const snippet = snippetManager.parseSnippetFile(\n      `\ntrigger k\nsnippet katex\n\\t\\`\\`\\`katex\n\\t\\${0:}\n\\t\\`\\`\\`\n    `\n    );\n    snippetManager.register(snippet, mode);\n  }, []);\n\n  const handleChange = useCallback(\n    value => {\n      onTextChange(value);\n    },\n    [onTextChange]\n  );\n\n  return (\n    <div className=\"Editor\">\n      <AceEditor\n        ref={ref}\n        value={text}\n        mode={mode}\n        theme=\"clouds_midnight\"\n        height={splitMode === \"vertical\" ? \"100vh\" : \"100%\"}\n        width={splitMode === \"horizontal\" ? \"100vw\" : \"calc(100% - 1px)\"}\n        fontSize=\"16px\"\n        focus={true}\n        showGutter={false}\n        showPrintMargin={false}\n        wrapEnabled={true}\n        highlightActiveLine={true}\n        enableBasicAutocompletion={true}\n        enableSnippets={true}\n        tabSize={2}\n        onChange={handleChange}\n        // TODO: Move these to a new file.\n        // TODO: Add this functionality to the plugin system.\n        commands={[\n          {\n            name: \"cursor-next-line\",\n            bindKey: { win: \"Ctrl-Enter\", mac: \"Cmmand-Enter\" },\n            exec: () => {\n              const { editor } = ref.current;\n              editor.navigateLineEnd();\n              editor.insert(\"\\n\");\n            }\n          },\n          {\n            name: \"cursor-prev-line\",\n            bindKey: { win: \"Ctrl-Shift-Enter\", mac: \"Cmmand-Shift-Enter\" },\n            exec: () => {\n              const { editor } = ref.current;\n              editor.navigateLineStart();\n              editor.insert(\"\\n\");\n              editor.navigateUp();\n            }\n          }\n        ]}\n        editorProps={{\n          $blockScrolling: Infinity\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Editor;\n","import { decode as decodeHtml } from \"html-encoder-decoder\";\nimport showdown from \"showdown\";\n\nexport const createShowdownLanguageExtension = (language, renderer) => {\n  showdown.extension(language, () => {\n    return [\n      {\n        type: \"output\",\n        filter: (text, converter, options) => {\n          // Most of this code was shamelessly stolen from https://github.com/Bloggify/showdown-highlight/blob/master/lib/index.js.\n          const left = \"<pre><code\\\\b[^>]*>\";\n          const right = \"</code></pre>\";\n          const flags = \"g\";\n          const classAttr = 'class=\"';\n\n          const replacement = (wholeMatch, match, left, right) => {\n            match = decodeHtml(match);\n            let lang = (left.match(/class=\"([^ \"]+)/) || [])[1];\n\n            if (left.includes(classAttr)) {\n              let attrIndex = left.indexOf(classAttr) + classAttr.length;\n              left =\n                left.slice(0, attrIndex) +\n                `code-${language} ` +\n                left.slice(attrIndex);\n            } else {\n              left = left.slice(0, -1) + ` class=\"code-${language}\">`;\n            }\n\n            if (lang === language) {\n              try {\n                return renderer(match, { lang, left, right, wholeMatch });\n              } catch (e) {\n                return `<span class=\"render-error\">${e}</span>`;\n              }\n            } else {\n              return wholeMatch;\n            }\n          };\n\n          return showdown.helper.replaceRecursiveRegExp(\n            text,\n            replacement,\n            left,\n            right,\n            flags\n          );\n        }\n      }\n    ];\n  });\n};\n","import katex from \"katex\";\nimport { createShowdownLanguageExtension } from \"utils/showdown\";\n\ncreateShowdownLanguageExtension(\"katex\", text => {\n  return katex.renderToString(\n    text\n      .split(\"\\n\")\n      // Add a newline to each line since we do that anyway.\n      // NOTE: Doing this means you can't split complicated expressions across\n      // multiple lines, but I think that's a good tradeoff as this isn't\n      // supposed to be a typesetting platform, but a platform for\n      // working through math problems.\n      .map(l => l + \" \\\\\\\\\")\n      .join(\"\\n\"),\n    {\n      throwOnError: false\n    }\n  );\n});\n","import { createShowdownLanguageExtension } from \"utils/showdown\";\nimport mermaid from \"mermaid\";\n\nmermaid.initialize({\n  theme: \"default\",\n  logLevel: \"fatal\",\n  securityLevel: \"strict\",\n  startOnLoad: true,\n  arrowMarkerAbsolute: false,\n  flowchart: {\n    htmlLabels: false,\n    curve: \"linear\"\n  },\n  sequence: {\n    diagramMarginX: 50,\n    diagramMarginY: 10,\n    actorMargin: 50,\n    width: 150,\n    height: 65,\n    boxMargin: 10,\n    boxTextMargin: 5,\n    noteMargin: 10,\n    messageMargin: 35,\n    mirrorActors: true,\n    bottomMarginAdj: 1,\n    useMaxWidth: true,\n    rightAngles: false,\n    showSequenceNumbers: false\n  },\n  gantt: {\n    titleTopMargin: 25,\n    barHeight: 20,\n    barGap: 4,\n    topPadding: 50,\n    leftPadding: 75,\n    gridLineStartPadding: 35,\n    fontSize: 11,\n    fontFamily: '\"Open-Sans\", \"sans-serif\"',\n    numberSectionStyles: 4,\n    axisFormat: \"%Y-%m-%d\"\n  }\n});\n\nlet currentIndex = 0;\n\nconst getNextId = () => {\n  const id = `mermaid-output-${currentIndex}`;\n  currentIndex++;\n  return id;\n};\n\ncreateShowdownLanguageExtension(\"mermaid\", (text, { el }) => {\n  return mermaid.render(getNextId(), text);\n});\n","import React, { useState, useEffect } from \"react\";\r\nimport showdown from \"showdown\";\r\nimport showdownHighlight from \"showdown-highlight\";\r\nimport \"extensions/katex\";\r\nimport \"extensions/mermaid\";\r\n\r\nconst converter = new showdown.Converter({\r\n  omitExtraWLInCodeBlocks: true,\r\n  ghCompatibleHeaderId: true,\r\n  prefixHeaderId: \"h-\",\r\n  parseImgDimensions: true,\r\n  simplifiedAutoLink: true,\r\n  excludeTrailingPunctuationFromURLs: true,\r\n  literalMidWordUnderscores: true,\r\n  strikethrough: true,\r\n  tables: true,\r\n  ghCodeBlocks: true,\r\n  tasklists: true,\r\n  disableForced4SpacesIndentedSublists: true,\r\n  extensions: [\"katex\", \"mermaid\", showdownHighlight]\r\n});\r\n\r\nconst Renderer = ({ text }) => {\r\n  const [html, setHtml] = useState(\"\");\r\n\r\n  // TODO: How to throttle this so we're not making so many expensive\r\n  // calls to render markdown?\r\n  useEffect(() => {\r\n    const html = converter.makeHtml(text);\r\n    setHtml(html);\r\n  }, [text]);\r\n\r\n  return (\r\n    <div\r\n      className=\"Renderer markdown-body\"\r\n      dangerouslySetInnerHTML={{ __html: html }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Renderer;\r\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport throttle from \"lodash/throttle\";\nimport parseUrl from \"url-parse\";\nimport SplitPane from \"react-split-pane\";\nimport Editor from \"components/Editor\";\nimport Renderer from \"components/Renderer\";\n\nconst SplitMode = {\n  VERTICAL: \"vertical\",\n  HORIZONTAL: \"horizontal\"\n};\n\nconst App = () => {\n  const [text, setText] = useState(\"\");\n  const [editorKey, setEditorKey] = useState(\"\");\n  const [id] = useState(() => parseUrl(window.location.href, true).query.id);\n  // TODO: Put this in state and make it configurable from the UI.\n  const splitMode = SplitMode.VERTICAL;\n\n  const handleSplitPaneResize = useCallback(\n    throttle(() => {\n      setEditorKey(`${Date.now()}~${Math.random()}`);\n    }, 50),\n    []\n  );\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleSplitPaneResize);\n    return () => window.removeEventListener(\"resize\", handleSplitPaneResize);\n  }, [handleSplitPaneResize]);\n\n  useEffect(() => {\n    if (id) {\n      setText(localStorage.getItem(`text:${id}`) || \"\");\n    }\n  }, [id]);\n\n  useEffect(() => {\n    if (id) {\n      localStorage.setItem(`text:${id}`, text);\n    }\n  }, [id, text]);\n\n  return (\n    <SplitPane\n      split={splitMode}\n      defaultSize=\"50%\"\n      minSize={100}\n      pane2Style={{ overflow: \"auto\" }}\n      onChange={handleSplitPaneResize}\n    >\n      <Editor\n        key={editorKey}\n        text={text}\n        onTextChange={setText}\n        splitMode={splitMode}\n      />\n      <Renderer text={text} />\n    </SplitPane>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"../node_modules/katex/dist/katex.min.css\";\nimport \"../node_modules/github-markdown-css/github-markdown.css\";\nimport \"../node_modules/highlight.js/styles/default.css\";\nimport \"../node_modules/highlight.js/styles/solarized-light.css\";\nimport \"./index.css\";\nimport \"style/markdown.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}